# Generated by Django 2.2.10 on 2021-12-18 13:27

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('elastics', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AssetExpansion',
            fields=[
                ('org_id', models.CharField(blank=True, db_index=True, default='', max_length=36, verbose_name='Organization')),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('hostname', models.CharField(blank=True, db_index=True, max_length=64, null=True, verbose_name='Hostname')),
                ('instance', models.CharField(blank=True, db_index=True, max_length=64, null=True, verbose_name='Instance name')),
                ('memory', models.IntegerField(blank=True, null=True, verbose_name='Memory')),
                ('core_thread', models.IntegerField(blank=True, null=True, verbose_name='Cpu threads')),
                ('cpu_vcpus', models.IntegerField(blank=True, null=True, verbose_name='Virtual cpu')),
                ('cpu_cores', models.IntegerField(blank=True, null=True, verbose_name='Cpu core')),
                ('localstoranum', models.IntegerField(blank=True, null=True, verbose_name='Number of data disks')),
                ('localstorasize', models.IntegerField(blank=True, null=True, verbose_name='Single disk size')),
                ('os_version', models.CharField(blank=True, db_index=True, max_length=32, null=True, verbose_name='OS version')),
                ('os_arch', models.CharField(blank=True, db_index=True, max_length=64, null=True, verbose_name='Release')),
                ('images', models.CharField(blank=True, max_length=64, null=True, verbose_name='Mirror image')),
                ('vpc', models.CharField(blank=True, max_length=128, null=True, verbose_name='Vpc network')),
                ('security', models.CharField(blank=True, max_length=512, null=True, verbose_name='Security group')),
                ('vswaitch', models.CharField(blank=True, max_length=128, null=True, verbose_name='Virtual switch')),
                ('instancetype', models.CharField(blank=True, max_length=128, null=True, verbose_name='Instance type')),
                ('eip', models.GenericIPAddressField(blank=True, db_index=True, null=True, verbose_name='Flexible ip')),
                ('ebandwidth', models.IntegerField(blank=True, null=True, verbose_name='Elastic ip bandwidth')),
                ('paybywidth', models.CharField(choices=[('PayByBandwidth', '固定带宽'), ('PayByTraffic', '按流量'), ('PayOnDemand', '按量付费'), ('PrePay', '包年包月')], max_length=64, verbose_name='Bandwidth billing method')),
                ('publicip', models.CharField(blank=True, db_index=True, max_length=128, null=True, verbose_name='Public IP')),
                ('primaryip', models.GenericIPAddressField(blank=True, db_index=True, null=True, verbose_name='IP')),
                ('primarynetwork', models.CharField(blank=True, max_length=128, null=True, verbose_name='Private network card')),
                ('primarymac', models.CharField(blank=True, max_length=128, null=True, verbose_name='Private network card mac')),
                ('regionid', models.CharField(blank=True, db_index=True, max_length=128, null=True, verbose_name='Area')),
                ('zoneid', models.CharField(blank=True, db_index=True, max_length=128, null=True, verbose_name='Availability zone')),
                ('chargetype', models.CharField(choices=[('PrePaid', '包年包月'), ('PostPaid', '按量付费')], db_index=True, max_length=64, verbose_name='Billing method')),
                ('operuser', models.CharField(blank=True, db_index=True, max_length=64, null=True, verbose_name='Operation and maintenance principal')),
                ('devuser', models.CharField(blank=True, db_index=True, max_length=64, null=True, verbose_name='Development Director')),
                ('dept', models.CharField(blank=True, db_index=True, max_length=64, null=True, verbose_name='Department')),
                ('status', models.CharField(blank=True, db_index=True, max_length=128, null=True, verbose_name='Status')),
                ('create_time', models.DateTimeField(blank=True, null=True, verbose_name='Creation time')),
                ('expired_time', models.DateTimeField(blank=True, null=True, verbose_name='Expired')),
                ('start_time', models.DateTimeField(blank=True, null=True, verbose_name='Start Time')),
                ('update_data', models.DateTimeField(auto_now=True, null=True, verbose_name='Date updated')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Comment')),
                ('cloudinfor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='elastics.CloudInfor', verbose_name='CloudInfor')),
            ],
            options={
                'verbose_name': 'AssetExpansion',
                'ordering': ['create_time'],
                'unique_together': {('hostname', 'primaryip', 'instance')},
            },
        ),
        migrations.CreateModel(
            name='Balanced',
            fields=[
                ('org_id', models.CharField(blank=True, db_index=True, default='', max_length=36, verbose_name='Organization')),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('loadid', models.CharField(blank=True, max_length=128, null=True, verbose_name='Instance id')),
                ('ip', models.GenericIPAddressField(blank=True, db_index=True, null=True, verbose_name='IP')),
                ('loadname', models.CharField(blank=True, max_length=512, null=True, verbose_name='Instance name')),
                ('vswitchId', models.CharField(blank=True, max_length=128, null=True, verbose_name='Virtual switch')),
                ('resgroup', models.CharField(blank=True, max_length=128, null=True, verbose_name='Enterprise Resource Group')),
                ('paytype', models.CharField(choices=[('PayByBandwidth', '固定带宽'), ('PayByTraffic', '按流量'), ('PayOnDemand', '按量付费'), ('PrePay', '包年包月')], max_length=64, verbose_name='Billing method')),
                ('masterzoneid', models.CharField(blank=True, max_length=128, null=True, verbose_name='Main zone')),
                ('slavezoneid', models.CharField(blank=True, max_length=128, null=True, verbose_name='Backup zone')),
                ('addresstype', models.CharField(choices=[('internet', '公网'), ('intranet', '内网')], max_length=64, verbose_name='Network Type')),
                ('loadbalancerspec', models.CharField(blank=True, max_length=128, null=True, verbose_name='Instance type')),
                ('vpcid', models.CharField(blank=True, max_length=128, null=True, verbose_name='Vpc network')),
                ('regionid', models.CharField(blank=True, max_length=128, null=True, verbose_name='Area')),
                ('status', models.CharField(blank=True, max_length=128, null=True, verbose_name='Status')),
                ('describeinfo', models.TextField(blank=True, null=True, verbose_name='Detail')),
                ('create_time', models.DateTimeField(blank=True, null=True, verbose_name='Creation time')),
                ('update_data', models.DateTimeField(auto_now=True, null=True, verbose_name='Date updated')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Comment')),
            ],
            options={
                'verbose_name': 'Balanced',
                'ordering': ['ip'],
            },
        ),
        migrations.CreateModel(
            name='DiskInfo',
            fields=[
                ('org_id', models.CharField(blank=True, db_index=True, default='', max_length=36, verbose_name='Organization')),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('diskid', models.CharField(blank=True, max_length=64, null=True, verbose_name='Disk id')),
                ('device', models.CharField(blank=True, max_length=32, null=True, verbose_name='Disk device')),
                ('category', models.CharField(choices=[('cloud', '普通云盘'), ('cloud_efficiency', '高效云盘'), ('cloud_ssd', 'SSD盘'), ('cloud_essd', 'ESSD云盘'), ('local_ssd_pro', 'I/O密集型本地盘'), ('local_hdd_pro', '吞吐密集型本地盘')], max_length=64, verbose_name='Disk type')),
                ('disk_size', models.BigIntegerField(blank=True, null=True, verbose_name='Disk size')),
                ('chargetype', models.CharField(choices=[('PrePaid', '包年包月'), ('PostPaid', '按量付费')], db_index=True, max_length=64, verbose_name='Billing method')),
                ('zoneid', models.CharField(blank=True, db_index=True, max_length=128, null=True, verbose_name='Availability zone')),
                ('delwith', models.CharField(choices=[('false', '保留不释放'), ('true', '随实例释放')], default='false', max_length=64, verbose_name='Release method')),
                ('snapshot', models.CharField(blank=True, choices=[('true', '已设置'), ('false', '未设置')], max_length=64, null=True, verbose_name='Automatic snapshot strategy')),
                ('autoanspshot', models.CharField(blank=True, choices=[('true', '启用'), ('false', '未启用')], max_length=64, null=True, verbose_name='Snapshot policy function')),
                ('regionid', models.CharField(blank=True, db_index=True, max_length=128, null=True, verbose_name='Area')),
                ('disk_type', models.CharField(choices=[('system', '系统盘'), ('data', '数据盘')], max_length=64, verbose_name='Disk attributes')),
                ('encrypted', models.CharField(default='false', max_length=64, verbose_name='Whether to encrypt')),
                ('status', models.CharField(blank=True, choices=[('In_use', '使用中'), ('Available', '待挂载')], max_length=64, null=True, verbose_name='Status')),
                ('expired_time', models.DateTimeField(blank=True, null=True, verbose_name='Expired')),
                ('create_time', models.DateTimeField(blank=True, null=True, verbose_name='Creation time')),
                ('update_data', models.DateTimeField(auto_now=True, null=True, verbose_name='Date updated')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Comment')),
                ('assetexpansion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='scaling.AssetExpansion', verbose_name='Assetexpansion')),
            ],
            options={
                'verbose_name': 'DiskInfo',
                'ordering': ['create_time'],
            },
        ),
    ]
