# Generated by Django 2.2.10 on 2021-12-18 13:27

import common.fields.model
from django.db import migrations, models
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Command',
            fields=[
                ('org_id', models.CharField(blank=True, db_index=True, default='', max_length=36, verbose_name='Organization')),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('user', models.CharField(db_index=True, max_length=64, verbose_name='User')),
                ('asset', models.CharField(db_index=True, max_length=128, verbose_name='Asset')),
                ('system_user', models.CharField(db_index=True, max_length=64, verbose_name='System user')),
                ('input', models.CharField(db_index=True, max_length=128, verbose_name='Input')),
                ('output', models.CharField(blank=True, max_length=1024, verbose_name='Output')),
                ('session', models.CharField(db_index=True, max_length=36, verbose_name='Session')),
                ('risk_level', models.SmallIntegerField(choices=[(0, 'Ordinary'), (5, 'Dangerous')], db_index=True, default=0, verbose_name='Risk level')),
                ('timestamp', models.IntegerField(db_index=True)),
            ],
            options={
                'db_table': 'terminal_command',
                'ordering': ('-timestamp',),
            },
        ),
        migrations.CreateModel(
            name='CommandStorage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('created_by', models.CharField(blank=True, max_length=32, null=True, verbose_name='Created by')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date created')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date updated')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='Name')),
                ('type', models.CharField(choices=[('null', 'Null'), ('server', 'Server'), ('es', 'Elasticsearch')], default='server', max_length=16, verbose_name='Type')),
                ('meta', common.fields.model.EncryptJsonDictTextField(default={})),
                ('comment', models.TextField(blank=True, default='', max_length=128, verbose_name='Comment')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReplayStorage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('created_by', models.CharField(blank=True, max_length=32, null=True, verbose_name='Created by')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date created')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date updated')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='Name')),
                ('type', models.CharField(choices=[('null', 'Null'), ('server', 'Server'), ('s3', 'S3'), ('ceph', 'Ceph'), ('swift', 'Swift'), ('oss', 'OSS'), ('azure', 'Azure')], default='server', max_length=16, verbose_name='Type')),
                ('meta', common.fields.model.EncryptJsonDictTextField(default={})),
                ('comment', models.TextField(blank=True, default='', max_length=128, verbose_name='Comment')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('org_id', models.CharField(blank=True, db_index=True, default='', max_length=36, verbose_name='Organization')),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('user', models.CharField(db_index=True, max_length=128, verbose_name='User')),
                ('user_id', models.CharField(blank=True, db_index=True, default='', max_length=36)),
                ('asset', models.CharField(db_index=True, max_length=128, verbose_name='Asset')),
                ('asset_id', models.CharField(blank=True, db_index=True, default='', max_length=36)),
                ('system_user', models.CharField(db_index=True, max_length=128, verbose_name='System user')),
                ('system_user_id', models.CharField(blank=True, db_index=True, default='', max_length=36)),
                ('login_from', models.CharField(choices=[('ST', 'SSH Terminal'), ('WT', 'Web Terminal')], default='ST', max_length=2)),
                ('remote_addr', models.CharField(blank=True, max_length=128, null=True, verbose_name='Remote addr')),
                ('is_success', models.BooleanField(db_index=True, default=True)),
                ('is_finished', models.BooleanField(db_index=True, default=False)),
                ('has_replay', models.BooleanField(default=False, verbose_name='Replay')),
                ('has_command', models.BooleanField(default=False, verbose_name='Command')),
                ('protocol', models.CharField(choices=[('ssh', 'ssh'), ('rdp', 'rdp'), ('vnc', 'vnc'), ('telnet', 'telnet'), ('mysql', 'mysql')], db_index=True, default='ssh', max_length=8)),
                ('date_start', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='Date start')),
                ('date_end', models.DateTimeField(null=True, verbose_name='Date end')),
            ],
            options={
                'db_table': 'terminal_session',
                'ordering': ['-date_start'],
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('session_online', models.IntegerField(default=0, verbose_name='Session Online')),
                ('cpu_used', models.FloatField(verbose_name='CPU Usage')),
                ('memory_used', models.FloatField(verbose_name='Memory Used')),
                ('connections', models.IntegerField(verbose_name='Connections')),
                ('threads', models.IntegerField(verbose_name='Threads')),
                ('boot_time', models.FloatField(verbose_name='Boot Time')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'terminal_status',
                'get_latest_by': 'date_created',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(choices=[('kill_session', 'Kill Session')], max_length=128, verbose_name='Name')),
                ('args', models.CharField(max_length=1024, verbose_name='Args')),
                ('is_finished', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_finished', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'terminal_task',
            },
        ),
        migrations.CreateModel(
            name='Terminal',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=32, verbose_name='Name')),
                ('remote_addr', models.CharField(blank=True, max_length=128, verbose_name='Remote Address')),
                ('ssh_port', models.IntegerField(default=2222, verbose_name='SSH Port')),
                ('http_port', models.IntegerField(default=5000, verbose_name='HTTP Port')),
                ('command_storage', models.CharField(default='default', max_length=128, verbose_name='Command storage')),
                ('replay_storage', models.CharField(default='default', max_length=128, verbose_name='Replay storage')),
                ('is_accepted', models.BooleanField(default=False, verbose_name='Is Accepted')),
                ('is_deleted', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('comment', models.TextField(blank=True, verbose_name='Comment')),
            ],
            options={
                'db_table': 'terminal',
                'ordering': ('is_accepted',),
            },
        ),
    ]
